from keras.models import load_model
import numpy as np

class Test:
    def __init__(self,X_test, y_test):
        self.X_test = np.array(X_test)
        self.y_test = np.array(y_test)
        self.test_model()


    def test_model(self):
        savedModel=load_model('models/weights_CNN_100.h5')
        test_loss, test_acc = savedModel.evaluate(self.X_test, self.y_test)
        print('Test accuracy: {:2.2f}%'.format(test_acc*100))
        print('Test loss: {:2.2f}%'.format(test_loss*100))


        print(self.X_test[0], type(self.X_test[0]))


        # t = [[325.4271697998047, 632.1354246139526], 
        #      [361.7753219604492, 605.8097791671753], 
        #      [380.9897994995117, 558.6653423309326], 
        #      [391.45275115966797, 516.4318799972534], 
        #      [391.8764877319336, 482.70187854766846], 
        #      [348.37329864501953, 504.16173934936523], 
        #      [348.1619644165039, 452.87489891052246], 
        #      [347.19974517822266, 421.7681407928467], 
        #      [345.6614303588867, 394.561185836792], 
        #      [320.3530502319336, 503.545560836792], 
        #      [318.0193328857422, 447.9714775085449], 
        #      [318.53647232055664, 411.61630153656006], 
        #      [319.79360580444336, 381.13001346588135], 
        #      [295.0844955444336, 513.2595777511597], 
        #      [289.42726135253906, 462.936487197876], 
        #      [291.29783630371094, 429.303560256958], 
        #      [295.01338958740234, 400.72108268737793], 
        #      [270.0077819824219, 531.8777132034302], 
        #      [262.3675346374512, 492.1101236343384], 
        #      [261.2149238586426, 465.3214645385742], 
        #      [262.8464126586914, 440.98601818084717]]


        t = [(325.4271697998047, 632.1354246139526), (361.7753219604492, 605.8097791671753), (380.9897994995117, 558.6653423309326), (391.45275115966797, 516.4318799972534), (391.8764877319336, 482.70187854766846), (348.37329864501953, 504.16173934936523), (348.1619644165039, 452.87489891052246), (347.19974517822266, 421.7681407928467), (345.6614303588867, 394.561185836792), (320.3530502319336, 503.545560836792), (318.0193328857422, 447.9714775085449), (318.53647232055664, 411.61630153656006), (319.79360580444336, 381.13001346588135), (295.0844955444336, 513.2595777511597), (289.42726135253906, 462.936487197876), (291.29783630371094, 429.303560256958), (295.01338958740234, 400.72108268737793), (270.0077819824219, 531.8777132034302), (262.3675346374512, 492.1101236343384), (261.2149238586426, 465.3214645385742), (262.8464126586914, 440.98601818084717)]
        

        t = np.expand_dims(t, axis=0)

        # t = np.array(t)
        print(t, type(t))



        # reshaped_input = np.expand_dims(self.X_test[1000], axis=0)  # ?????????????????

        # Make prediction
        # prediction = savedModel.predict(reshaped_input)
        prediction = savedModel.predict(t)
        print(prediction)
        prediction_index = np.argmax(prediction)
        print("Index of highest value in prediction:", prediction_index)



